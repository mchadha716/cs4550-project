{"ast":null,"code":"import { Socket } from \"phoenix\";\nlet socket = new Socket(\"/socket\", {\n  params: {\n    token: \"\"\n  }\n});\nsocket.connect();\nlet channel = socket.channel(\"session:lobby\", {});\nlet state = {\n  position: new Map()\n};\nlet callback = null;\n\nfunction state_update(st) {\n  newState = st;\n\n  if (callback) {\n    callback(newState);\n  }\n}\n\nexport function ch_join(cb) {\n  callback = cb;\n  callback(state);\n}\nexport function ch_push(newLocation) {\n  channel.push(\"newLocation\", newLocation).receive(\"ok\", state_update).receive(\"error\", resp => {\n    console.log(\"Unable to push: \", resp);\n  });\n}\nchannel.join().receive(\"ok\", state_update).receive(\"error\", resp => {\n  console.log(\"Unable to join: \", resp);\n});","map":{"version":3,"sources":["/Users/zia/Git/cs4550-project/mbta-tracker/web-ui/src/socket.js"],"names":["Socket","socket","params","token","connect","channel","state","position","Map","callback","state_update","st","newState","ch_join","cb","ch_push","newLocation","push","receive","resp","console","log","join"],"mappings":"AAAA,SAAQA,MAAR,QAAqB,SAArB;AAEA,IAAIC,MAAM,GAAG,IAAID,MAAJ,CAAW,SAAX,EAAsB;AAACE,EAAAA,MAAM,EAAE;AAACC,IAAAA,KAAK,EAAE;AAAR;AAAT,CAAtB,CAAb;AACAF,MAAM,CAACG,OAAP;AAEA,IAAIC,OAAO,GAAGJ,MAAM,CAACI,OAAP,CAAe,eAAf,EAAgC,EAAhC,CAAd;AAEA,IAAIC,KAAK,GAAG;AACXC,EAAAA,QAAQ,EAAE,IAAIC,GAAJ;AADC,CAAZ;AAIA,IAAIC,QAAQ,GAAG,IAAf;;AAEA,SAASC,YAAT,CAAsBC,EAAtB,EAA0B;AACzBC,EAAAA,QAAQ,GAAGD,EAAX;;AACA,MAAIF,QAAJ,EAAc;AACbA,IAAAA,QAAQ,CAACG,QAAD,CAAR;AACA;AACD;;AAED,OAAO,SAASC,OAAT,CAAiBC,EAAjB,EAAqB;AAC3BL,EAAAA,QAAQ,GAAGK,EAAX;AACAL,EAAAA,QAAQ,CAACH,KAAD,CAAR;AACA;AAED,OAAO,SAASS,OAAT,CAAiBC,WAAjB,EAA8B;AACpCX,EAAAA,OAAO,CAACY,IAAR,CAAa,aAAb,EAA4BD,WAA5B,EACKE,OADL,CACa,IADb,EACmBR,YADnB,EAEKQ,OAFL,CAEa,OAFb,EAEsBC,IAAI,IAAI;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AACD,GAJL;AAKA;AAEDd,OAAO,CAACiB,IAAR,GACKJ,OADL,CACa,IADb,EACmBR,YADnB,EAEKQ,OAFL,CAEa,OAFb,EAEsBC,IAAI,IAAI;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCF,IAAhC;AACD,CAJL","sourcesContent":["import {Socket} from \"phoenix\";\n\nlet socket = new Socket(\"/socket\", {params: {token: \"\"}});\nsocket.connect();\n\nlet channel = socket.channel(\"session:lobby\", {});\n\nlet state = {\n\tposition: new Map()\n}\n\nlet callback = null;\n\nfunction state_update(st) {\n\tnewState = st;\n\tif (callback) {\n\t\tcallback(newState);\n\t}\n}\n\nexport function ch_join(cb) {\n\tcallback = cb;\n\tcallback(state);\n}\n\nexport function ch_push(newLocation) {\n\tchannel.push(\"newLocation\", newLocation)\n\t\t\t\t .receive(\"ok\", state_update)\n\t\t\t\t .receive(\"error\", resp => {\n\t\t\t\t \t\tconsole.log(\"Unable to push: \", resp)\n\t\t\t\t });\n}\n\nchannel.join()\n\t\t\t .receive(\"ok\", state_update)\n\t\t\t .receive(\"error\", resp => {\n\t\t\t \t\tconsole.log(\"Unable to join: \", resp)\n\t\t\t });"]},"metadata":{},"sourceType":"module"}